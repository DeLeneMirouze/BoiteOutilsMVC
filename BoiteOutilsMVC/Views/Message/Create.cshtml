@model BoiteOutilsMVC.Domaine.Personne

@{
    ViewBag.Title = "Create";
}

<h2>Créer</h2>

@using (Html.BeginForm()) {
    
    //=> le paramètre true indique que les erreurs liées à une propriété du modèle ne seront pas affichées par ValidationSummary
    // Seul ValidationMessageFor les traitera
    @Html.ValidationSummary(true)

  <h3>@ViewBag.Message</h3>


    <fieldset>
        <legend>Personne</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Nom)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Nom)
            @Html.ValidationMessageFor(model => model.Nom)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SuperHeros)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SuperHeros)
            @Html.ValidationMessageFor(model => model.SuperHeros)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PointDeVie)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PointDeVie)
            @Html.ValidationMessageFor(model => model.PointDeVie)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

@* => script qui gère la validation *@
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
